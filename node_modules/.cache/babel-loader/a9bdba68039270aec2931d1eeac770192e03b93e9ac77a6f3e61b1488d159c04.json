{"ast":null,"code":"// import \"./new.scss\";\n// import Sidebar from '../../../components/admin/sidebar/Sidebar';\n// import Navbar from '../../../components/admin/navbar/Navbar';\n// import DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\n// import { useState } from \"react\";\n\n// const New = () => {\n//   const [firstname, setFristname] = useState(\"\");\n//   const [lastname, setLastname] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [usertype, setUsertype] = useState(\"\");\n//   const [contact, setContact] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n//   const [biography, setBiography] = useState(\"\");\n\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\n\n//   const handleFristnameChange = (e) => {\n//     const firstnameValue = e.target.value;\n//     setFristname(firstnameValue);\n//   };\n\n//   const handleLastnameChange = (e) => {\n//     const lastnameValue = e.target.value;\n//     setLastname(lastnameValue);\n//   };\n\n//   const handleEmailChange = (e) => {\n//     const emailValue = e.target.value;\n//     setEmail(emailValue);\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     const passwordValue = e.target.value;\n//     setPassword(passwordValue);\n//   };\n\n//   const handleUsertypeChange = (e) => {\n//     const usertypeValue = e.target.value;\n//     setUsertype(usertypeValue);\n//   };\n//   const handleContactChange = (e) => {\n//     const contactValue = e.target.value;\n//     setContact(contactValue);\n//   };\n\n//   const handleImageChange = (e) => {\n//     const imageValue = e.target.value;\n//     setImage(imageValue);\n//   };\n\n//   const handleBiographyChange = (e) => {\n//     const biographyValue = e.target.value;\n//     setBiography(biographyValue);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Upload file first\n//     // const formData = new FormData();\n//     // formData.append(\"file\", file);\n\n//     try {\n\n//       // Create content data to be sent to /user endpoint\n//       const contentData = {\n//         firstname: firstname,\n//         lastname: lastname,\n//         email: email,\n//         password: password,\n//         image:image,\n//         contact:contact,\n//         biography:biography,\n//         usertype: usertype\n\n//       };\n\n//       const createResponse = await fetch('http://127.0.0.1:5000/api/v1/auth/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(contentData),\n//       });\n\n//       if (!createResponse.ok) {\n//         throw new Error('Failed to add user');\n//       }\n\n//       const data = await createResponse.json();\n//       console.log('user created successfully:', data);\n\n//       // Show success message and reset form fields\n//       setSuccessMessage(\"Article saved successfully!\");\n//       setFristname(\"\");\n//       setLastname(\"\");\n//       setEmail(\"\");\n//       setPassword(\"\");\n//       setUsertype(\"\");\n//       setEmail(\"\");\n//       setBiography(\"\");\n//       setContact(\"\");\n\n//       // Hide success message after 3 seconds\n//       setTimeout(() => {\n//         setSuccessMessage(\"\");\n//       }, 3000);\n\n//     } catch (error) {\n//       console.error('Error adding user:', error.message);\n//       // Handle error state, show error message to name, etc.\n//     }\n//   };\n\n//   return (\n\n//     <div className=\"newArticle\">\n//       <Sidebar />\n//       <div className=\"newContainer\">\n//         <Navbar />\n\n//         <div className=\"top\">\n//           <h1>Add New user</h1>\n//         </div>\n\n//         <div className=\"bottom\">\n\n//           <div className=\"right\">\n//             <form onSubmit={handleSubmit}>\n\n//               <div className=\"formInput\">\n//                 <label>Enter firstname</label>\n//                 <input type=\"text\" value={firstname} onChange={handleFristnameChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter lastname</label>\n//                 <input type=\"text\" value={lastname} onChange={handleLastnameChange} /> {/* Handle slug change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter email</label>\n//                 <input type=\"text\" value={email} onChange={handleEmailChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter password</label>\n//                 <input type=\"number\" value={password} onChange={handlePasswordChange} /> {/* Handle slug change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter usertype</label>\n//                 <input type=\"text\" value={usertype} onChange={handleUsertypeChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter image url</label>\n//                 <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter biography</label>\n//                 <input type=\"text\" value={biography} onChange={handleBiographyChange} /> {/* Handle slug change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter contact</label>\n//                 <input type=\"number\" value={contact} onChange={handleContactChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <button type=\"submit\" className=\"submit-button\">ADD</button>\n\n//             </form>\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n\n//   );\n\n// };\n\n// export default New;\n\n// // const New = ({ inputs=[], title }) => {\n// //   const [file, setFile] = useState(\"\");\n\n// //   return (\n\n// //     <div className=\"new\">\n// //       <Sidebar />\n// //       <div className=\"newContainer\">\n// //         <Navbar />\n// //         <div className=\"top\">\n// //           <h1>Add New User</h1>\n// //         </div>\n// //         <div className=\"bottom\">\n// //           <div className=\"left\">\n// //             <img\n// //               src={\n// //                 file\n// //                   ? URL.createObjectURL(file)\n// //                   : \"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\n// //               }\n// //               alt=\"\"\n// //             />\n// //           </div>\n// //           <div className=\"right\">\n// //             <form>\n// //               <div className=\"formInput\">\n// //                 <label htmlFor=\"file\">\n// //                   Image: <DriveFolderUploadOutlinedIcon className=\"icon\" />\n// //                 </label>\n// //                 <input\n// //                   type=\"file\"\n// //                   id=\"file\"\n// //                   onChange={(e) => setFile(e.target.files[0])}\n// //                   style={{ display: \"none\" }}\n// //                 />\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >First Name</label>\n// //                 <input type=\"text\" placeholder=\"Name\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Last Name</label>\n// //                 <input type=\"text\" placeholder=\"Name\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Email</label>\n// //                 <input type=\"email\" placeholder=\"email@domain.com\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >id</label>\n// //                 <input type=\"number\" placeholder=\"id number\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Password</label>\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Confirm Password</label>\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >user type</label>\n// //                 <input type=\"text\" placeholder=\"usertype\"/>\n// //               </div>\n\n// //               {/* {inputs.map((input) => (\n// //                 <div className=\"formInput\" key={input.id}>\n// //                   <label>{input.label}</label>\n// //                   <input type={input.type} placeholder={input.placeholder} />\n// //                 </div>\n// //               ))} */}\n// //               <button>Send</button>\n// //             </form>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n\n// //   );\n// // };\n\n// // export default New;\n\n// import \"react-quill/dist/quill.snow.css\";\n// import \"./new.scss\";\n// import Sidebar from '../../../components/admin/sidebar/Sidebar';\n// import Navbar from '../../../components/admin/navbar/Navbar';\n// import DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\n// import React, { useState } from \"react\";\n// import ReactQuill from \"react-quill\";\n\n// const New = () => {\n//   const [user, setUser] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n//   const [title, setTitle] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\n\n//   const handleDateChange = (e) => {\n//     const dateValue = e.target.value;\n//     setDate(dateValue);\n//   };\n\n//   const handleImageChange = (e) => {\n//     const imageValue = e.target.value;\n//     setImage(imageValue);\n//   };\n\n//   const handleUserChange = (e) => {\n//     const userValue = e.target.value;\n//     setUser(userValue);\n//   };\n\n//   const handleTitleChange = (e) => {\n//     const titleValue = e.target.value;\n//     setTitle(titleValue);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n\n//       // Create content data to be sent to /content endpoint\n//       const contentData = {\n//         title: title,\n//         image: image,\n//         user: user, \n//         date: date\n//       };\n\n//       const createResponse = await fetch('http://127.0.0.1:5000/api/v1/articles/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(contentData),\n//       });\n\n//       if (!createResponse.ok) {\n//         throw new Error('Failed to add content');\n//       }\n\n//       const data = await createResponse.json();\n//       console.log('Content created successfully:', data);\n\n//       // Show success message and reset form fields\n//       setSuccessMessage(\"User saved successfully!\");\n//       setUser(\"\");\n//       setTitle(\"\");\n//       setDate(\"\");\n//       setImage(\"\");\n\n//       // Hide success message after 3 seconds\n//       setTimeout(() => {\n//         setSuccessMessage(\"\");\n//       }, 3000);\n\n//     } catch (error) {\n//       console.error('Error adding content:', error.message);\n//       // Handle error state, show error message to user, etc.\n//     }\n//   };\n\n//   return (\n\n//     <div className=\"newArticle\">\n//       <Sidebar />\n//       <div className=\"newContainer\">\n//         <Navbar />\n\n//         <div className=\"top\">\n//           <h1>Add New Article</h1>\n//         </div>\n\n//         <div className=\"bottom\">\n\n//           <div className=\"right\">\n//             <form onSubmit={handleSubmit}>\n\n//               <div className=\"formInput\">\n//                 <label>Enter User</label>\n//                 <input type=\"text\" value={user} onChange={handleUserChange} /> {/* Handle user change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter Image Url</label>\n//                 <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle image change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter Title</label>\n//                 <input type=\"text\" value={title} onChange={handleTitleChange} /> {/* Handle title change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter Date</label>\n//                 <input type=\"text\" value={date} onChange={handleDateChange} /> {/* Handle date change*/}\n//               </div>\n\n//               <button type=\"submit\" className=\"submit-button\">Send</button>\n\n//             </form>\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n\n//   );\n\n// };\n\n// export default New;","map":{"version":3,"names":[],"sources":["C:/Users/USER/mariam/project_mariam/frontend/news-app/src/admin/pages/newUser/New.jsx"],"sourcesContent":["// import \"./new.scss\";\r\n// import Sidebar from '../../../components/admin/sidebar/Sidebar';\r\n// import Navbar from '../../../components/admin/navbar/Navbar';\r\n// import DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\n// import { useState } from \"react\";\r\n\r\n\r\n// const New = () => {\r\n//   const [firstname, setFristname] = useState(\"\");\r\n//   const [lastname, setLastname] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [usertype, setUsertype] = useState(\"\");\r\n//   const [contact, setContact] = useState(\"\");\r\n//   const [image, setImage] = useState(\"\");\r\n//   const [biography, setBiography] = useState(\"\");\r\n\r\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\r\n\r\n\r\n//   const handleFristnameChange = (e) => {\r\n//     const firstnameValue = e.target.value;\r\n//     setFristname(firstnameValue);\r\n//   };\r\n\r\n//   const handleLastnameChange = (e) => {\r\n//     const lastnameValue = e.target.value;\r\n//     setLastname(lastnameValue);\r\n//   };\r\n\r\n//   const handleEmailChange = (e) => {\r\n//     const emailValue = e.target.value;\r\n//     setEmail(emailValue);\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     const passwordValue = e.target.value;\r\n//     setPassword(passwordValue);\r\n//   };\r\n\r\n//   const handleUsertypeChange = (e) => {\r\n//     const usertypeValue = e.target.value;\r\n//     setUsertype(usertypeValue);\r\n//   };\r\n//   const handleContactChange = (e) => {\r\n//     const contactValue = e.target.value;\r\n//     setContact(contactValue);\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const imageValue = e.target.value;\r\n//     setImage(imageValue);\r\n//   };\r\n\r\n\r\n//   const handleBiographyChange = (e) => {\r\n//     const biographyValue = e.target.value;\r\n//     setBiography(biographyValue);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Upload file first\r\n//     // const formData = new FormData();\r\n//     // formData.append(\"file\", file);\r\n\r\n//     try {\r\n\r\n//       // Create content data to be sent to /user endpoint\r\n//       const contentData = {\r\n//         firstname: firstname,\r\n//         lastname: lastname,\r\n//         email: email,\r\n//         password: password,\r\n//         image:image,\r\n//         contact:contact,\r\n//         biography:biography,\r\n//         usertype: usertype\r\n\r\n//       };\r\n\r\n//       const createResponse = await fetch('http://127.0.0.1:5000/api/v1/auth/register', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(contentData),\r\n//       });\r\n\r\n//       if (!createResponse.ok) {\r\n//         throw new Error('Failed to add user');\r\n//       }\r\n\r\n//       const data = await createResponse.json();\r\n//       console.log('user created successfully:', data);\r\n      \r\n//       // Show success message and reset form fields\r\n//       setSuccessMessage(\"Article saved successfully!\");\r\n//       setFristname(\"\");\r\n//       setLastname(\"\");\r\n//       setEmail(\"\");\r\n//       setPassword(\"\");\r\n//       setUsertype(\"\");\r\n//       setEmail(\"\");\r\n//       setBiography(\"\");\r\n//       setContact(\"\");\r\n\r\n//       // Hide success message after 3 seconds\r\n//       setTimeout(() => {\r\n//         setSuccessMessage(\"\");\r\n//       }, 3000);\r\n      \r\n//     } catch (error) {\r\n//       console.error('Error adding user:', error.message);\r\n//       // Handle error state, show error message to name, etc.\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n    \r\n//     <div className=\"newArticle\">\r\n//       <Sidebar />\r\n//       <div className=\"newContainer\">\r\n//         <Navbar />\r\n\r\n//         <div className=\"top\">\r\n//           <h1>Add New user</h1>\r\n//         </div>\r\n\r\n//         <div className=\"bottom\">\r\n\r\n//           <div className=\"right\">\r\n//             <form onSubmit={handleSubmit}>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter firstname</label>\r\n//                 <input type=\"text\" value={firstname} onChange={handleFristnameChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n              \r\n//               <div className=\"formInput\">\r\n//                 <label>Enter lastname</label>\r\n//                 <input type=\"text\" value={lastname} onChange={handleLastnameChange} /> {/* Handle slug change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter email</label>\r\n//                 <input type=\"text\" value={email} onChange={handleEmailChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n              \r\n//               <div className=\"formInput\">\r\n//                 <label>Enter password</label>\r\n//                 <input type=\"number\" value={password} onChange={handlePasswordChange} /> {/* Handle slug change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter usertype</label>\r\n//                 <input type=\"text\" value={usertype} onChange={handleUsertypeChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter image url</label>\r\n//                 <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n              \r\n//               <div className=\"formInput\">\r\n//                 <label>Enter biography</label>\r\n//                 <input type=\"text\" value={biography} onChange={handleBiographyChange} /> {/* Handle slug change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter contact</label>\r\n//                 <input type=\"number\" value={contact} onChange={handleContactChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n\r\n              \r\n             \r\n//               <button type=\"submit\" className=\"submit-button\">ADD</button>\r\n\r\n//             </form>\r\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n\r\n//   );\r\n\r\n\r\n// };\r\n\r\n// export default New;\r\n\r\n// // const New = ({ inputs=[], title }) => {\r\n// //   const [file, setFile] = useState(\"\");\r\n\r\n// //   return (\r\n\r\n// //     <div className=\"new\">\r\n// //       <Sidebar />\r\n// //       <div className=\"newContainer\">\r\n// //         <Navbar />\r\n// //         <div className=\"top\">\r\n// //           <h1>Add New User</h1>\r\n// //         </div>\r\n// //         <div className=\"bottom\">\r\n// //           <div className=\"left\">\r\n// //             <img\r\n// //               src={\r\n// //                 file\r\n// //                   ? URL.createObjectURL(file)\r\n// //                   : \"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\r\n// //               }\r\n// //               alt=\"\"\r\n// //             />\r\n// //           </div>\r\n// //           <div className=\"right\">\r\n// //             <form>\r\n// //               <div className=\"formInput\">\r\n// //                 <label htmlFor=\"file\">\r\n// //                   Image: <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n// //                 </label>\r\n// //                 <input\r\n// //                   type=\"file\"\r\n// //                   id=\"file\"\r\n// //                   onChange={(e) => setFile(e.target.files[0])}\r\n// //                   style={{ display: \"none\" }}\r\n// //                 />\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >First Name</label>\r\n// //                 <input type=\"text\" placeholder=\"Name\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Last Name</label>\r\n// //                 <input type=\"text\" placeholder=\"Name\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Email</label>\r\n// //                 <input type=\"email\" placeholder=\"email@domain.com\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >id</label>\r\n// //                 <input type=\"number\" placeholder=\"id number\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Password</label>\r\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Confirm Password</label>\r\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >user type</label>\r\n// //                 <input type=\"text\" placeholder=\"usertype\"/>\r\n// //               </div>\r\n\r\n// //               {/* {inputs.map((input) => (\r\n// //                 <div className=\"formInput\" key={input.id}>\r\n// //                   <label>{input.label}</label>\r\n// //                   <input type={input.type} placeholder={input.placeholder} />\r\n// //                 </div>\r\n// //               ))} */}\r\n// //               <button>Send</button>\r\n// //             </form>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n    \r\n// //   );\r\n// // };\r\n\r\n// // export default New;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import \"react-quill/dist/quill.snow.css\";\r\n// import \"./new.scss\";\r\n// import Sidebar from '../../../components/admin/sidebar/Sidebar';\r\n// import Navbar from '../../../components/admin/navbar/Navbar';\r\n// import DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\n// import React, { useState } from \"react\";\r\n// import ReactQuill from \"react-quill\";\r\n\r\n\r\n// const New = () => {\r\n//   const [user, setUser] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [image, setImage] = useState(\"\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\r\n\r\n\r\n//   const handleDateChange = (e) => {\r\n//     const dateValue = e.target.value;\r\n//     setDate(dateValue);\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const imageValue = e.target.value;\r\n//     setImage(imageValue);\r\n//   };\r\n\r\n//   const handleUserChange = (e) => {\r\n//     const userValue = e.target.value;\r\n//     setUser(userValue);\r\n//   };\r\n\r\n//   const handleTitleChange = (e) => {\r\n//     const titleValue = e.target.value;\r\n//     setTitle(titleValue);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n\r\n//       // Create content data to be sent to /content endpoint\r\n//       const contentData = {\r\n//         title: title,\r\n//         image: image,\r\n//         user: user, \r\n//         date: date\r\n//       };\r\n\r\n//       const createResponse = await fetch('http://127.0.0.1:5000/api/v1/articles/register', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(contentData),\r\n//       });\r\n\r\n//       if (!createResponse.ok) {\r\n//         throw new Error('Failed to add content');\r\n//       }\r\n\r\n//       const data = await createResponse.json();\r\n//       console.log('Content created successfully:', data);\r\n      \r\n//       // Show success message and reset form fields\r\n//       setSuccessMessage(\"User saved successfully!\");\r\n//       setUser(\"\");\r\n//       setTitle(\"\");\r\n//       setDate(\"\");\r\n//       setImage(\"\");\r\n\r\n//       // Hide success message after 3 seconds\r\n//       setTimeout(() => {\r\n//         setSuccessMessage(\"\");\r\n//       }, 3000);\r\n      \r\n//     } catch (error) {\r\n//       console.error('Error adding content:', error.message);\r\n//       // Handle error state, show error message to user, etc.\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n    \r\n//     <div className=\"newArticle\">\r\n//       <Sidebar />\r\n//       <div className=\"newContainer\">\r\n//         <Navbar />\r\n\r\n//         <div className=\"top\">\r\n//           <h1>Add New Article</h1>\r\n//         </div>\r\n\r\n//         <div className=\"bottom\">\r\n\r\n//           <div className=\"right\">\r\n//             <form onSubmit={handleSubmit}>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter User</label>\r\n//                 <input type=\"text\" value={user} onChange={handleUserChange} /> {/* Handle user change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter Image Url</label>\r\n//                 <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle image change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter Title</label>\r\n//                 <input type=\"text\" value={title} onChange={handleTitleChange} /> {/* Handle title change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter Date</label>\r\n//                 <input type=\"text\" value={date} onChange={handleDateChange} /> {/* Handle date change*/}\r\n//               </div>\r\n\r\n              \r\n//               <button type=\"submit\" className=\"submit-button\">Send</button>\r\n\r\n//             </form>\r\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n\r\n//   );\r\n\r\n\r\n// };\r\n\r\n// export default New;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}