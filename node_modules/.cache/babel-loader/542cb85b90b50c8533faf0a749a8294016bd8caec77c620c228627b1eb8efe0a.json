{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\mariam\\\\project_mariam\\\\frontend\\\\news-app\\\\src\\\\admin\\\\pages\\\\newUser\\\\New.jsx\",\n  _s = $RefreshSig$();\n// import \"./new.scss\";\n// import Sidebar from '../../../components/admin/sidebar/Sidebar';\n// import Navbar from '../../../components/admin/navbar/Navbar';\n// import DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\n// import { useState } from \"react\";\n\n// const New = () => {\n//   const [firstname, setFristname] = useState(\"\");\n//   const [lastname, setLastname] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [usertype, setUsertype] = useState(\"\");\n//   const [contact, setContact] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n//   const [biography, setBiography] = useState(\"\");\n\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\n\n//   const handleFristnameChange = (e) => {\n//     const firstnameValue = e.target.value;\n//     setFristname(firstnameValue);\n//   };\n\n//   const handleLastnameChange = (e) => {\n//     const lastnameValue = e.target.value;\n//     setLastname(lastnameValue);\n//   };\n\n//   const handleEmailChange = (e) => {\n//     const emailValue = e.target.value;\n//     setEmail(emailValue);\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     const passwordValue = e.target.value;\n//     setPassword(passwordValue);\n//   };\n\n//   const handleUsertypeChange = (e) => {\n//     const usertypeValue = e.target.value;\n//     setUsertype(usertypeValue);\n//   };\n//   const handleContactChange = (e) => {\n//     const contactValue = e.target.value;\n//     setContact(contactValue);\n//   };\n\n//   const handleImageChange = (e) => {\n//     const imageValue = e.target.value;\n//     setImage(imageValue);\n//   };\n\n//   const handleBiographyChange = (e) => {\n//     const biographyValue = e.target.value;\n//     setBiography(biographyValue);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Upload file first\n//     // const formData = new FormData();\n//     // formData.append(\"file\", file);\n\n//     try {\n\n//       // Create content data to be sent to /user endpoint\n//       const contentData = {\n//         firstname: firstname,\n//         lastname: lastname,\n//         email: email,\n//         password: password,\n//         image:image,\n//         contact:contact,\n//         biography:biography,\n//         usertype: usertype\n\n//       };\n\n//       const createResponse = await fetch('http://127.0.0.1:5000/api/v1/auth/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(contentData),\n//       });\n\n//       if (!createResponse.ok) {\n//         throw new Error('Failed to add user');\n//       }\n\n//       const data = await createResponse.json();\n//       console.log('user created successfully:', data);\n\n//       // Show success message and reset form fields\n//       setSuccessMessage(\"Article saved successfully!\");\n//       setFristname(\"\");\n//       setLastname(\"\");\n//       setEmail(\"\");\n//       setPassword(\"\");\n//       setUsertype(\"\");\n//       setEmail(\"\");\n//       setBiography(\"\");\n//       setContact(\"\");\n\n//       // Hide success message after 3 seconds\n//       setTimeout(() => {\n//         setSuccessMessage(\"\");\n//       }, 3000);\n\n//     } catch (error) {\n//       console.error('Error adding user:', error.message);\n//       // Handle error state, show error message to name, etc.\n//     }\n//   };\n\n//   return (\n\n//     <div className=\"newArticle\">\n//       <Sidebar />\n//       <div className=\"newContainer\">\n//         <Navbar />\n\n//         <div className=\"top\">\n//           <h1>Add New user</h1>\n//         </div>\n\n//         <div className=\"bottom\">\n\n//           <div className=\"right\">\n//             <form onSubmit={handleSubmit}>\n\n//               <div className=\"formInput\">\n//                 <label>Enter firstname</label>\n//                 <input type=\"text\" value={firstname} onChange={handleFristnameChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter lastname</label>\n//                 <input type=\"text\" value={lastname} onChange={handleLastnameChange} /> {/* Handle slug change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter email</label>\n//                 <input type=\"text\" value={email} onChange={handleEmailChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter password</label>\n//                 <input type=\"number\" value={password} onChange={handlePasswordChange} /> {/* Handle slug change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter usertype</label>\n//                 <input type=\"text\" value={usertype} onChange={handleUsertypeChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter image url</label>\n//                 <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter biography</label>\n//                 <input type=\"text\" value={biography} onChange={handleBiographyChange} /> {/* Handle slug change*/}\n//               </div>\n\n//               <div className=\"formInput\">\n//                 <label>Enter contact</label>\n//                 <input type=\"number\" value={contact} onChange={handleContactChange} /> {/* Handle name change*/}\n//               </div>\n\n//               <button type=\"submit\" className=\"submit-button\">ADD</button>\n\n//             </form>\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n\n//   );\n\n// };\n\n// export default New;\n\n// // const New = ({ inputs=[], title }) => {\n// //   const [file, setFile] = useState(\"\");\n\n// //   return (\n\n// //     <div className=\"new\">\n// //       <Sidebar />\n// //       <div className=\"newContainer\">\n// //         <Navbar />\n// //         <div className=\"top\">\n// //           <h1>Add New User</h1>\n// //         </div>\n// //         <div className=\"bottom\">\n// //           <div className=\"left\">\n// //             <img\n// //               src={\n// //                 file\n// //                   ? URL.createObjectURL(file)\n// //                   : \"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\n// //               }\n// //               alt=\"\"\n// //             />\n// //           </div>\n// //           <div className=\"right\">\n// //             <form>\n// //               <div className=\"formInput\">\n// //                 <label htmlFor=\"file\">\n// //                   Image: <DriveFolderUploadOutlinedIcon className=\"icon\" />\n// //                 </label>\n// //                 <input\n// //                   type=\"file\"\n// //                   id=\"file\"\n// //                   onChange={(e) => setFile(e.target.files[0])}\n// //                   style={{ display: \"none\" }}\n// //                 />\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >First Name</label>\n// //                 <input type=\"text\" placeholder=\"Name\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Last Name</label>\n// //                 <input type=\"text\" placeholder=\"Name\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Email</label>\n// //                 <input type=\"email\" placeholder=\"email@domain.com\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >id</label>\n// //                 <input type=\"number\" placeholder=\"id number\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Password</label>\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >Confirm Password</label>\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\n// //               </div>\n// //               <div className=\"formInput\">\n// //                 <label >user type</label>\n// //                 <input type=\"text\" placeholder=\"usertype\"/>\n// //               </div>\n\n// //               {/* {inputs.map((input) => (\n// //                 <div className=\"formInput\" key={input.id}>\n// //                   <label>{input.label}</label>\n// //                   <input type={input.type} placeholder={input.placeholder} />\n// //                 </div>\n// //               ))} */}\n// //               <button>Send</button>\n// //             </form>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n\n// //   );\n// // };\n\n// // export default New;\n\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./new.scss\";\nimport Sidebar from '../../../components/admin/sidebar/Sidebar';\nimport Navbar from '../../../components/admin/navbar/Navbar';\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\nimport React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst New = () => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [category, setCategory] = useState(\"technology\"); // Default category\n  const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\n\n  const categories = [\"Sports\", \"Technology\", \"Education\", \"politics \", \"entertainment\"]; // Example categories\n\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  };\n  const handleDateChange = e => {\n    const dateValue = e.target.value;\n    setDate(dateValue);\n  };\n  const handleImageChange = e => {\n    const imageValue = e.target.value;\n    setImage(imageValue);\n  };\n  const handleUserChange = e => {\n    const userValue = e.target.value;\n    setUser(userValue);\n  };\n  const handleTitleChange = e => {\n    const titleValue = e.target.value;\n    setTitle(titleValue);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Upload file first\n    // const formData = new FormData();\n    // formData.append(\"file\", file);\n\n    try {\n      // Create content data to be sent to /content endpoint\n      const contentData = {\n        title: title,\n        text: text,\n        image: image,\n        video: \"\",\n        category_id: category,\n        user: user,\n        date: date\n      };\n      const createResponse = await fetch('http://127.0.0.1:5000/api/v1/articles/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(contentData)\n      });\n      if (!createResponse.ok) {\n        throw new Error('Failed to add content');\n      }\n      const data = await createResponse.json();\n      console.log('Content created successfully:', data);\n\n      // Show success message and reset form fields\n      setSuccessMessage(\"Article saved successfully!\");\n      setUser(\"\");\n      setTitle(\"\");\n      setDate(\"\");\n      setImage(\"\");\n      setText(\"\");\n      setCategory(\"technology\"); // Reset to default category\n\n      // Hide success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage(\"\");\n      }, 3000);\n    } catch (error) {\n      console.error('Error adding content:', error.message);\n      // Handle error state, show error message to user, etc.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newArticle\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: user,\n                onChange: handleUserChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Image Url\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: image,\n                onChange: handleImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: title,\n                onChange: handleTitleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: date,\n                onChange: handleDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"success-message\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n};\n_s(New, \"2WMIUDHLLDYmgPiv68DkDDe+BHY=\");\n_c = New;\nexport default New;\nvar _c;\n$RefreshReg$(_c, \"New\");","map":{"version":3,"names":["Sidebar","Navbar","DriveFolderUploadOutlinedIcon","React","useState","ReactQuill","jsxDEV","_jsxDEV","New","_s","user","setUser","date","setDate","image","setImage","title","setTitle","text","setText","category","setCategory","successMessage","setSuccessMessage","categories","handleCategoryChange","e","target","value","handleDateChange","dateValue","handleImageChange","imageValue","handleUserChange","userValue","handleTitleChange","titleValue","handleSubmit","preventDefault","contentData","video","category_id","createResponse","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","setTimeout","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/USER/mariam/project_mariam/frontend/news-app/src/admin/pages/newUser/New.jsx"],"sourcesContent":["// import \"./new.scss\";\r\n// import Sidebar from '../../../components/admin/sidebar/Sidebar';\r\n// import Navbar from '../../../components/admin/navbar/Navbar';\r\n// import DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\n// import { useState } from \"react\";\r\n\r\n\r\n// const New = () => {\r\n//   const [firstname, setFristname] = useState(\"\");\r\n//   const [lastname, setLastname] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [usertype, setUsertype] = useState(\"\");\r\n//   const [contact, setContact] = useState(\"\");\r\n//   const [image, setImage] = useState(\"\");\r\n//   const [biography, setBiography] = useState(\"\");\r\n\r\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\r\n\r\n\r\n//   const handleFristnameChange = (e) => {\r\n//     const firstnameValue = e.target.value;\r\n//     setFristname(firstnameValue);\r\n//   };\r\n\r\n//   const handleLastnameChange = (e) => {\r\n//     const lastnameValue = e.target.value;\r\n//     setLastname(lastnameValue);\r\n//   };\r\n\r\n//   const handleEmailChange = (e) => {\r\n//     const emailValue = e.target.value;\r\n//     setEmail(emailValue);\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     const passwordValue = e.target.value;\r\n//     setPassword(passwordValue);\r\n//   };\r\n\r\n//   const handleUsertypeChange = (e) => {\r\n//     const usertypeValue = e.target.value;\r\n//     setUsertype(usertypeValue);\r\n//   };\r\n//   const handleContactChange = (e) => {\r\n//     const contactValue = e.target.value;\r\n//     setContact(contactValue);\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const imageValue = e.target.value;\r\n//     setImage(imageValue);\r\n//   };\r\n\r\n\r\n//   const handleBiographyChange = (e) => {\r\n//     const biographyValue = e.target.value;\r\n//     setBiography(biographyValue);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Upload file first\r\n//     // const formData = new FormData();\r\n//     // formData.append(\"file\", file);\r\n\r\n//     try {\r\n\r\n//       // Create content data to be sent to /user endpoint\r\n//       const contentData = {\r\n//         firstname: firstname,\r\n//         lastname: lastname,\r\n//         email: email,\r\n//         password: password,\r\n//         image:image,\r\n//         contact:contact,\r\n//         biography:biography,\r\n//         usertype: usertype\r\n\r\n//       };\r\n\r\n//       const createResponse = await fetch('http://127.0.0.1:5000/api/v1/auth/register', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(contentData),\r\n//       });\r\n\r\n//       if (!createResponse.ok) {\r\n//         throw new Error('Failed to add user');\r\n//       }\r\n\r\n//       const data = await createResponse.json();\r\n//       console.log('user created successfully:', data);\r\n      \r\n//       // Show success message and reset form fields\r\n//       setSuccessMessage(\"Article saved successfully!\");\r\n//       setFristname(\"\");\r\n//       setLastname(\"\");\r\n//       setEmail(\"\");\r\n//       setPassword(\"\");\r\n//       setUsertype(\"\");\r\n//       setEmail(\"\");\r\n//       setBiography(\"\");\r\n//       setContact(\"\");\r\n\r\n//       // Hide success message after 3 seconds\r\n//       setTimeout(() => {\r\n//         setSuccessMessage(\"\");\r\n//       }, 3000);\r\n      \r\n//     } catch (error) {\r\n//       console.error('Error adding user:', error.message);\r\n//       // Handle error state, show error message to name, etc.\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n    \r\n//     <div className=\"newArticle\">\r\n//       <Sidebar />\r\n//       <div className=\"newContainer\">\r\n//         <Navbar />\r\n\r\n//         <div className=\"top\">\r\n//           <h1>Add New user</h1>\r\n//         </div>\r\n\r\n//         <div className=\"bottom\">\r\n\r\n//           <div className=\"right\">\r\n//             <form onSubmit={handleSubmit}>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter firstname</label>\r\n//                 <input type=\"text\" value={firstname} onChange={handleFristnameChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n              \r\n//               <div className=\"formInput\">\r\n//                 <label>Enter lastname</label>\r\n//                 <input type=\"text\" value={lastname} onChange={handleLastnameChange} /> {/* Handle slug change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter email</label>\r\n//                 <input type=\"text\" value={email} onChange={handleEmailChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n              \r\n//               <div className=\"formInput\">\r\n//                 <label>Enter password</label>\r\n//                 <input type=\"number\" value={password} onChange={handlePasswordChange} /> {/* Handle slug change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter usertype</label>\r\n//                 <input type=\"text\" value={usertype} onChange={handleUsertypeChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter image url</label>\r\n//                 <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n              \r\n//               <div className=\"formInput\">\r\n//                 <label>Enter biography</label>\r\n//                 <input type=\"text\" value={biography} onChange={handleBiographyChange} /> {/* Handle slug change*/}\r\n//               </div>\r\n\r\n//               <div className=\"formInput\">\r\n//                 <label>Enter contact</label>\r\n//                 <input type=\"number\" value={contact} onChange={handleContactChange} /> {/* Handle name change*/}\r\n//               </div>\r\n\r\n\r\n              \r\n             \r\n//               <button type=\"submit\" className=\"submit-button\">ADD</button>\r\n\r\n//             </form>\r\n//             {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n\r\n//   );\r\n\r\n\r\n// };\r\n\r\n// export default New;\r\n\r\n// // const New = ({ inputs=[], title }) => {\r\n// //   const [file, setFile] = useState(\"\");\r\n\r\n// //   return (\r\n\r\n// //     <div className=\"new\">\r\n// //       <Sidebar />\r\n// //       <div className=\"newContainer\">\r\n// //         <Navbar />\r\n// //         <div className=\"top\">\r\n// //           <h1>Add New User</h1>\r\n// //         </div>\r\n// //         <div className=\"bottom\">\r\n// //           <div className=\"left\">\r\n// //             <img\r\n// //               src={\r\n// //                 file\r\n// //                   ? URL.createObjectURL(file)\r\n// //                   : \"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\r\n// //               }\r\n// //               alt=\"\"\r\n// //             />\r\n// //           </div>\r\n// //           <div className=\"right\">\r\n// //             <form>\r\n// //               <div className=\"formInput\">\r\n// //                 <label htmlFor=\"file\">\r\n// //                   Image: <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n// //                 </label>\r\n// //                 <input\r\n// //                   type=\"file\"\r\n// //                   id=\"file\"\r\n// //                   onChange={(e) => setFile(e.target.files[0])}\r\n// //                   style={{ display: \"none\" }}\r\n// //                 />\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >First Name</label>\r\n// //                 <input type=\"text\" placeholder=\"Name\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Last Name</label>\r\n// //                 <input type=\"text\" placeholder=\"Name\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Email</label>\r\n// //                 <input type=\"email\" placeholder=\"email@domain.com\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >id</label>\r\n// //                 <input type=\"number\" placeholder=\"id number\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Password</label>\r\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >Confirm Password</label>\r\n// //                 <input type=\"password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\"/>\r\n// //               </div>\r\n// //               <div className=\"formInput\">\r\n// //                 <label >user type</label>\r\n// //                 <input type=\"text\" placeholder=\"usertype\"/>\r\n// //               </div>\r\n\r\n// //               {/* {inputs.map((input) => (\r\n// //                 <div className=\"formInput\" key={input.id}>\r\n// //                   <label>{input.label}</label>\r\n// //                   <input type={input.type} placeholder={input.placeholder} />\r\n// //                 </div>\r\n// //               ))} */}\r\n// //               <button>Send</button>\r\n// //             </form>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n    \r\n// //   );\r\n// // };\r\n\r\n// // export default New;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./new.scss\";\r\nimport Sidebar from '../../../components/admin/sidebar/Sidebar';\r\nimport Navbar from '../../../components/admin/navbar/Navbar';\r\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\n\r\n\r\nconst New = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [category, setCategory] = useState(\"technology\"); // Default category\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // Success message state\r\n\r\n  const categories = [\"Sports\", \"Technology\", \"Education\", \"politics \",\"entertainment\" ]; // Example categories\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    const dateValue = e.target.value;\r\n    setDate(dateValue);\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const imageValue = e.target.value;\r\n    setImage(imageValue);\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    const userValue = e.target.value;\r\n    setUser(userValue);\r\n  };\r\n\r\n  const handleTitleChange = (e) => {\r\n    const titleValue = e.target.value;\r\n    setTitle(titleValue);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Upload file first\r\n    // const formData = new FormData();\r\n    // formData.append(\"file\", file);\r\n\r\n    try {\r\n\r\n      // Create content data to be sent to /content endpoint\r\n      const contentData = {\r\n        title: title,\r\n        text: text,\r\n        image: image,\r\n        video: \"\",\r\n        category_id: category,\r\n        user: user, \r\n        date: date\r\n      };\r\n\r\n      const createResponse = await fetch('http://127.0.0.1:5000/api/v1/articles/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(contentData),\r\n      });\r\n\r\n      if (!createResponse.ok) {\r\n        throw new Error('Failed to add content');\r\n      }\r\n\r\n      const data = await createResponse.json();\r\n      console.log('Content created successfully:', data);\r\n      \r\n      // Show success message and reset form fields\r\n      setSuccessMessage(\"Article saved successfully!\");\r\n      setUser(\"\");\r\n      setTitle(\"\");\r\n      setDate(\"\");\r\n      setImage(\"\");\r\n      setText(\"\");\r\n      setCategory(\"technology\"); // Reset to default category\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 3000);\r\n      \r\n    } catch (error) {\r\n      console.error('Error adding content:', error.message);\r\n      // Handle error state, show error message to user, etc.\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"newArticle\">\r\n      <Sidebar />\r\n      <div className=\"newContainer\">\r\n        <Navbar />\r\n\r\n        <div className=\"top\">\r\n          <h1>Add New Article</h1>\r\n        </div>\r\n\r\n        <div className=\"bottom\">\r\n\r\n          <div className=\"right\">\r\n            <form onSubmit={handleSubmit}>\r\n\r\n              <div className=\"formInput\">\r\n                <label>Enter User</label>\r\n                <input type=\"text\" value={user} onChange={handleUserChange} /> {/* Handle user change*/}\r\n              </div>\r\n\r\n              <div className=\"formInput\">\r\n                <label>Enter Image Url</label>\r\n                <input type=\"text\" value={image} onChange={handleImageChange} /> {/* Handle image change*/}\r\n              </div>\r\n\r\n              <div className=\"formInput\">\r\n                <label>Enter Title</label>\r\n                <input type=\"text\" value={title} onChange={handleTitleChange} /> {/* Handle title change*/}\r\n              </div>\r\n\r\n              <div className=\"formInput\">\r\n                <label>Enter Date</label>\r\n                <input type=\"text\" value={date} onChange={handleDateChange} /> {/* Handle date change*/}\r\n              </div>\r\n\r\n              \r\n              <button type=\"submit\" className=\"submit-button\">Send</button>\r\n\r\n            </form>\r\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default New;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAOA,OAAO,iCAAiC;AACxC,OAAO,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}